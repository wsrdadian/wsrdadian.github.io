{"meta":{"title":"卡恩思欧的博客","subtitle":"不爱撸猫的摄影师不是好程序猿","description":null,"author":"WSR","url":"https://wsrdadian.github.io"},"pages":[{"title":"categories","date":"2019-01-14T09:15:11.000Z","updated":"2019-01-14T09:15:22.328Z","comments":false,"path":"categories/index.html","permalink":"https://wsrdadian.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-01-14T09:13:56.000Z","updated":"2019-01-14T09:15:24.920Z","comments":false,"path":"tags/index.html","permalink":"https://wsrdadian.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"地图离线-python+PIL","slug":"使用python离线地图","date":"2019-01-15T13:25:54.000Z","updated":"2019-03-08T01:57:50.988Z","comments":true,"path":"2019/01/15/使用python离线地图/","link":"","permalink":"https://wsrdadian.github.io/2019/01/15/使用python离线地图/","excerpt":"","text":"使用python离线地图 环境 python3.7 内置pip，使用比较方便 PIL只支持到 python2.7,在3.7之后，使用 pillow 效果相同1pip install Pillow 代码 github链接 按照md文件进行自定义操作 修改了一些代码 gmap_utils.py 文件中ak值换成自己申请的 download_tiles.py 文件 1234query = &quot;qt=tile&amp;x=%d&amp;y=%d&amp;z=%d&amp;styles=%s%s&amp;udt=20190307&quot; % (x, y, zoom, styles, scaler)url = &quot;http://online0.map.bdimg.com/onlinelabel/?&quot; + querypath = &quot;%d_%d_%d_r&quot; % (zoom ,x, y)filename = path + &quot;.png&quot; merge_tiles.py 文件 由于原代码中文件路径和文件名与该文件中的要求不符，所以修改filename使其符合要求 1filename = &quot;tile/%d_%d_%d_%s.%s&quot; % (zoom, x, y, TYPE, ext) 生成的图片加层级标志 1result.save(&quot;map_%d_%s.%s&quot; % (zoom, TYPE, ext)) 仍然存在的一些问题 图片过多时，出现10060错误，目前只是重新获取，应该需要对 REQUEST 进行深入研究 级别过高时，合并图片出现内存溢出错误，初步判断为 python 内存设置问题，需继续研究 若合并时内存问题不能解决，高层级可以先获取省级，再逐个将省级合并为国家级，此时应写出新的 python 的图像合成文件","categories":[{"name":"python","slug":"python","permalink":"https://wsrdadian.github.io/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://wsrdadian.github.io/tags/python/"},{"name":"PIL","slug":"PIL","permalink":"https://wsrdadian.github.io/tags/PIL/"}]},{"title":"使用vue.js2.5+cube-ui仿饿了么APP-项目准备工作","slug":"使用vue-js2-5-cube-ui仿饿了么APP-项目准备工作","date":"2019-01-15T08:31:21.000Z","updated":"2019-01-15T11:46:51.891Z","comments":true,"path":"2019/01/15/使用vue-js2-5-cube-ui仿饿了么APP-项目准备工作/","link":"","permalink":"https://wsrdadian.github.io/2019/01/15/使用vue-js2-5-cube-ui仿饿了么APP-项目准备工作/","excerpt":"","text":"进行项目准备，安装 vue、cube-ui 并测试 api 数据接口。 vue 安装 安装vue-cli 12npm install -g @vue/clivue --version 创建项目 1vue create 项目名 选择相应配置 测试项目是否能够成功运行 12cd 项目名npm run serve 访问 http://localhost:8080/ cube-ui安装 cube-ui的 github地址 作为 vue-cli 插件使用 1vue add cube-ui 进行相关配置 请仔细阅读 vue-cli 和 cube-ui 文档 api接口mock 根目录下添加 ./data.json在项目源码中下载文件，下载方法 在 vue.config.js 中添加代码 1234const appData = require(&apos;./data.json&apos;)const seller = appData.sellerconst goods = appData.goodsconst ratings = appData.ratings pluginOptions后添加 12345678910111213141516171819202122devServer: &#123; before(app) &#123; app.get(&apos;/api/seller&apos;,function(req,res) &#123; res.json(&#123; errno: 0, data: seller &#125;) &#125;) app.get(&apos;/api/goods&apos;,function(req,res) &#123; res.json(&#123; errno: 0, data: goods &#125;) &#125;) app.get(&apos;/api/ratings&apos;,function(req,res) &#123; res.json(&#123; errno: 0, data: ratings &#125;) &#125;) &#125; &#125; 运行程序并访问 http://localhost:8080/api/seller 如果显示json内容则正确 为谷歌浏览器安装 jsonview","categories":[{"name":"前端学习","slug":"前端学习","permalink":"https://wsrdadian.github.io/categories/前端学习/"}],"tags":[{"name":"vue","slug":"vue","permalink":"https://wsrdadian.github.io/tags/vue/"},{"name":"cube-ui","slug":"cube-ui","permalink":"https://wsrdadian.github.io/tags/cube-ui/"}]},{"title":"修改配色为小埋色以及图标制作","slug":"修改配色为小埋色以及图标制作","date":"2019-01-14T12:46:27.000Z","updated":"2019-01-14T13:01:49.960Z","comments":true,"path":"2019/01/14/修改配色为小埋色以及图标制作/","link":"","permalink":"https://wsrdadian.github.io/2019/01/14/修改配色为小埋色以及图标制作/","excerpt":"","text":"修改博客配色为小埋色 , 主色是小埋斗篷颜色 , 部分部件是裤子的颜色 , 大部分文字为黑白. less文件/themes/indigo/source/css/_partical/variable.less1234@darkPrimaryColor: #334432; @primaryColor: #f28135; #主色(小埋色)@lightPrimaryColor: #fcddb7; #发色@textPrimaryColor: #fff; 修改头像背景/themes/indigo/source/img/brand.jpg 图标制作 使用ico在线制作工具将图片转为 .ico 格式 将图片放入 themes/indigo/source/img 文件夹中，并修改 themes/indigo 中_config.xml 中 favicon 为 /img/favicon.ico","categories":[{"name":"前端学习","slug":"前端学习","permalink":"https://wsrdadian.github.io/categories/前端学习/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://wsrdadian.github.io/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://wsrdadian.github.io/tags/blog/"}]},{"title":"使用hexo快速建立属于自己的blog","slug":"如使用hexo何¦何使用hexo快建立blog快速","date":"2019-01-14T11:30:25.000Z","updated":"2019-01-14T12:29:25.287Z","comments":true,"path":"2019/01/14/如使用hexo何¦何使用hexo快建立blog快速/","link":"","permalink":"https://wsrdadian.github.io/2019/01/14/如使用hexo何¦何使用hexo快建立blog快速/","excerpt":"","text":"使用HEXO快速搭建个性化BLOG 环境 使用命令行工具 Git 管理和部署代码 安装 Node 并安装 npm 步骤 注册 github 账号并配置 ssh 在github上新建一个项目,注意项目名为 用户名.github.io 使用npm快速安装 hexo 123hexo init //初始化hexocd hexo //进入项目文件npm install //安装依赖包 安装喜欢的 主题 12git clone 主题的下载地址.gitnpm install 主题插件 此博客风格为 indigo 主题安装完成后对 hexo 的根目录下的 _config.yml 进行修改 1234567891011title: 博客标题subtitle: 副标题description: 网站描述language: 语言url: 站点网址(必填,否则会报错)deploy: type: git repo: ssh网址.git branch: master&lt;!--其他视情况填写即可--&gt; 对主题进行个性化配置,修改主题目录下的 _config.yml 生成网页 , 本地预览 12hexo generatehexo server 本地预览网址: http://localhost:4000 新建 blog 1hexo new &quot;文章标题&quot; 在 source/_posts 目录下会生成文章标题.md 123456title: 文章标题date: 2015-07-30 07:56:29 #发表日期，一般不改动categories: 文章分类tags: [github,hexo] 文章标签---正文，使用Markdown语法书写 部署到 github 的项目上 1hexo deploy 部署成功会提示 1[info] Deploy done: git 访问 https://github用户名.github.io 查看自己的博客 常见问题 提示 Cannot read property ‘replace’ of null 错误 ——–&gt; _config.yml 中 url 未填写导致 代码部署未更新 ——–&gt; hexo clean 后执行 hexo deploy 即可 每次部署都需要输入 github 用户名和密码 ———&gt; 检查 _config.yml 中配置的链接是 ssh 还是 https 链接 自定义的样式无效 ——-&gt; _config.yml 中设置 cdn: false","categories":[{"name":"前端学习","slug":"前端学习","permalink":"https://wsrdadian.github.io/categories/前端学习/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://wsrdadian.github.io/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://wsrdadian.github.io/tags/blog/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-01-14T08:37:25.599Z","updated":"2019-01-14T08:37:25.599Z","comments":true,"path":"2019/01/14/hello-world/","link":"","permalink":"https://wsrdadian.github.io/2019/01/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}